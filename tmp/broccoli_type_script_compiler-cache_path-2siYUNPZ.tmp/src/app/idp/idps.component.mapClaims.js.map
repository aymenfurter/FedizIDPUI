{"version":3,"file":"idps.component.mapClaims.js","sourceRoot":"","sources":["../../home/mika/workspace/fediz-idp-webui/angular2-fedizidpui-cli/fediz-idp-ui/tmp/broccoli_type_script_compiler-input_base_path-o2t0YTLc.tmp/0/src/app/idp/idps.component.mapClaims.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA0B,eAAe,CAAC,CAAA;AAE1C,oBAAuB,OAAO,CAAC,CAAA;AAE/B,uBAA6C,iBAAiB,CAAC,CAAA;AAC/D,6BAA4B,gBAAgB,CAAC,CAAA;AAC7C,+BAA8B,2BAA2B,CAAC,CAAA;AAO1D;IAOC,+BAAoB,KAAqB,EAAU,MAAc,EAAU,OAAoB,EAAU,aAA4B;QAAjH,UAAK,GAAL,KAAK,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,YAAO,GAAP,OAAO,CAAa;QAAU,kBAAa,GAAb,aAAa,CAAe;QAFnI,UAAK,GAAG,IAAI,SAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IAGtE,CAAC;IAEA,wCAAQ,GAAR;QAAA,iBAcE;QAbD,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC,SAAS,CAC7B,UAAA,IAAI,IAAI,OAAA,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,EAAzB,CAAyB,CACpC,CAAC;QAEL,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,UAAA,MAAM;YAC1C,IAAI,EAAE,GAAG,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;YAE1C,EAAE,CAAC,CAAC,EAAE,IAAI,WAAW,CAAC,CAAC,CAAC;gBACvB,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAC1B,UAAA,IAAI,IAAI,OAAA,KAAI,CAAC,KAAK,GAAG,IAAI,EAAjB,CAAiB,CAC5B,CAAC;YACH,CAAC;QACJ,CAAC,CAAC,CAAC;IACN,CAAC;IAED,uCAAO,GAAP,UAAQ,KAAK,EAAE,KAAK;QACnB,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,KAAK,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC,SAAS,CAChE,IAAI,CAAC,QAAQ,EAAE,CACd,CAAC;IACJ,CAAC;IAEH,6CAAa,GAAb;QACC,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC,SAAS,CAC3F,IAAI,CAAC,QAAQ,EAAE,CACd,CAAC;IACN,CAAC;IAzCF;QAAC,gBAAS,CAAC;YACR,QAAQ,EAAE,YAAY;YACxB,WAAW,EAAE,wCAAwC;YACrD,SAAS,EAAE,CAAC,0BAAW,EAAE,8BAAa,CAAC;SACvC,CAAC;;6BAAA;IAsCF,4BAAC;AAAD,CAAC,AArCD,IAqCC;AArCY,6BAAqB,wBAqCjC,CAAA","sourcesContent":["import { Component } from '@angular/core';\nimport { NgForm }    from '@angular/common';\nimport { IDP }    from './idp';\nimport { Claim }    from './../claim/claim';\nimport { Router, ActivatedRoute }       from '@angular/router';\nimport { IDPsService } from './idps-service';\nimport { ClaimsService } from './../claim/claims-service';\n\n@Component({\n  \tselector: 'idpmapform',\n\ttemplateUrl: 'idps.component.template.mapClaims.html',\n\tproviders: [IDPsService, ClaimsService]\n})\nexport class IdpMapClaimsComponent {  \t\t\n\tprivate claims: Claim[];\n\tprivate chosenClaimType: string;\n\tprivate claimIsOptional: boolean;\n  \tprivate sub: any;\n  \tmodel = new IDP(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", []);\n\n\tconstructor(private route: ActivatedRoute, private router: Router, private service: IDPsService, private claimsService: ClaimsService) {\n\t}\n\n \tngOnInit() {\n \t\tthis.claimsService.findAll().subscribe(\n            data => this.claims = data.claims\n        );\n\n\t    this.sub = this.route.params.subscribe(params => {\n\t       let id = decodeURIComponent(params['id']);\n\n\t       if (id != \"undefined\") {\n\t\t       this.service.find(id).subscribe(\n\t            \tdata => this.model = data\n\t        \t);\n\t       \t} \n\t     });\n  \t}\n\n  \tonUnmap(entry, model) {\n  \t\tthis.service.removeClaimMapping(model, entry.claimType).subscribe(\t  \t\t\n\t  \t\tthis.ngOnInit()\n\t    );\n  \t}\n\n\tonMapNewClaim() {\n\t\tthis.service.addClaimMapping(this.model, this.chosenClaimType, this.claimIsOptional).subscribe(\t  \t\t\n\t  \t\tthis.ngOnInit()\n\t    );\n\t}\n}"]}