{"version":3,"file":"idps.component.mapApplications.js","sourceRoot":"","sources":["../../home/mika/workspace/fediz-idp-webui/angular2-fedizidpui-cli/fediz-idp-ui/tmp/broccoli_type_script_compiler-input_base_path-o2t0YTLc.tmp/0/src/app/idp/idps.component.mapApplications.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA0B,eAAe,CAAC,CAAA;AAE1C,oBAAuB,OAAO,CAAC,CAAA;AAE/B,uBAA6C,iBAAiB,CAAC,CAAA;AAC/D,6BAA4B,gBAAgB,CAAC,CAAA;AAC7C,qCAAoC,uCAAuC,CAAC,CAAA;AAO5E;IAMC,qCAAoB,KAAqB,EAAU,MAAc,EAAU,OAAoB,EAAU,mBAAwC;QAA7H,UAAK,GAAL,KAAK,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,YAAO,GAAP,OAAO,CAAa;QAAU,wBAAmB,GAAnB,mBAAmB,CAAqB;QAF/I,UAAK,GAAG,IAAI,SAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IAGtE,CAAC;IAEA,8CAAQ,GAAR;QAAA,iBAcE;QAbD,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,CAAC,SAAS,CACnC,UAAA,IAAI,IAAI,OAAA,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,EAArC,CAAqC,CAChD,CAAC;QAEL,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,UAAA,MAAM;YAC1C,IAAI,EAAE,GAAG,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;YAE1C,EAAE,CAAC,CAAC,EAAE,IAAI,WAAW,CAAC,CAAC,CAAC;gBACvB,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAC1B,UAAA,IAAI,IAAI,OAAA,KAAI,CAAC,KAAK,GAAG,IAAI,EAAjB,CAAiB,CAC5B,CAAC;YACH,CAAC;QACJ,CAAC,CAAC,CAAC;IACN,CAAC;IAED,6CAAO,GAAP,UAAQ,KAAK,EAAE,KAAK;QACnB,IAAI,CAAC,OAAO,CAAC,wBAAwB,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC,SAAS,CAClE,IAAI,CAAC,QAAQ,EAAE,CACd,CAAC;IACJ,CAAC;IAEH,yDAAmB,GAAnB;QACC,IAAI,CAAC,OAAO,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC,SAAS,CAC7E,IAAI,CAAC,QAAQ,EAAE,CACd,CAAC;IACN,CAAC;IAxCF;QAAC,gBAAS,CAAC;YACR,QAAQ,EAAE,YAAY;YACxB,WAAW,EAAE,8CAA8C;YAC3D,SAAS,EAAE,CAAC,0BAAW,EAAE,0CAAmB,CAAC;SAC7C,CAAC;;mCAAA;IAqCF,kCAAC;AAAD,CAAC,AApCD,IAoCC;AApCY,mCAA2B,8BAoCvC,CAAA","sourcesContent":["import { Component } from '@angular/core';\nimport { NgForm }    from '@angular/common';\nimport { IDP }    from './idp';\nimport { Application }    from './../application/application';\nimport { Router, ActivatedRoute }       from '@angular/router';\nimport { IDPsService } from './idps-service';\nimport { ApplicationsService } from './../application/applications-service';\n\n@Component({\n  \tselector: 'idpmapform',\n\ttemplateUrl: 'idps.component.template.mapApplications.html',\n\tproviders: [IDPsService, ApplicationsService]\n})\nexport class IdpMapApplicationsComponent {  \t\t\n\tprivate applications: Application[];\n\tprivate chosenApplication: string;\t\n  \tprivate sub: any;\n  \tmodel = new IDP(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", []);\n\n\tconstructor(private route: ActivatedRoute, private router: Router, private service: IDPsService, private applicationsService: ApplicationsService) {\n\t}\n\n \tngOnInit() {\n \t\tthis.applicationsService.findAll().subscribe(\n            data => this.applications = data.applications\n        );\n\n\t    this.sub = this.route.params.subscribe(params => {\n\t       let id = decodeURIComponent(params['id']);\n\n\t       if (id != \"undefined\") {\n\t\t       this.service.find(id).subscribe(\n\t            \tdata => this.model = data\n\t        \t);\n\t       \t} \n\t     });\n  \t}\n\n  \tonUnmap(entry, model) {\n  \t\tthis.service.removeApplicationMapping(model, entry.realm).subscribe(\t  \t\t\n\t  \t\tthis.ngOnInit()\n\t    );\n  \t}\n\n\tonMapNewApplication() {\n\t\tthis.service.addApplicationMapping(this.model, this.chosenApplication).subscribe(\t  \t\t\n\t  \t\tthis.ngOnInit()\n\t    );\n\t}\n}"]}