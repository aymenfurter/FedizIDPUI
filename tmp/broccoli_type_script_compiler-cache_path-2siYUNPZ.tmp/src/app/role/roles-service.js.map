{"version":3,"file":"roles-service.js","sourceRoot":"","sources":["../../home/mika/workspace/fediz-idp-webui/angular2-fedizidpui-cli/fediz-idp-ui/tmp/broccoli_type_script_compiler-input_base_path-o2t0YTLc.tmp/0/src/app/role/roles-service.ts"],"names":[],"mappings":";;;;;;;;;;AACA,qBAA2B,eAAe,CAAC,CAAA;AAE3C,4BAA2B,yBAAyB,CAAC,CAAA;AACrD,2BAA2B,iBAAiB,CAAC,CAAA;AAE7C,uBAAuB,oBAAoB,CAAC,CAAA;AAC5C,QAAO,SAAS,CAAC,CAAA;AAEjB,IAAI,OAAO,GAAG,EAAE,EACZ,OAAO,GAAW,eAAM,CAAC,UAAU,EACnC,aAAa,GAAW,OAAO,EAC/B,QAAQ,GAAW,OAAO,GAAG,aAAa,GAAG,QAAQ,GAAG,eAAM,CAAC,QAAQ,EACvE,OAAO,GAAW,OAAO,GAAG,aAAa,GAAG,GAAG,CAAC;AAGpD;IAGI,sBAAY,UAAsB;QAC9B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IACjC,CAAC;IAED,8BAAO,GAAP;QACI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC;aAC/B,GAAG,CAAC,UAAC,GAAQ,IAAK,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC;aAC7B,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACjC,CAAC;IAED,2BAAI,GAAJ,UAAK,EAAU;QACX,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,GAAG,EAAE,CAAC;aACnC,GAAG,CAAC,UAAC,GAAQ,IAAK,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC;aAC7B,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACjC,CAAC;IAED,8BAAO,GAAP,UAAQ,IAAU;QACd,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC;aAChD,GAAG,CAAC,UAAC,GAAQ,IAAK,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC;aAC7B,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACjC,CAAC;IAED,6BAAM,GAAN,UAAO,IAAU;QACb,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC;aACrC,GAAG,CAAC,UAAC,GAAQ,IAAK,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC;aAC7B,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACjC,CAAC;IAED,6BAAM,GAAN,UAAQ,IAAU;QACb,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC;aACpD,GAAG,CAAC,UAAC,GAAQ,IAAK,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC;aAC7B,KAAK,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;IACxC,CAAC;IAGD,8CAA8C;IAC9C,yCAAkB,GAAlB,UAAmB,KAAK;IACxB,CAAC;IAED,kCAAW,GAAX,UAAY,KAAK;QACb,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACrB,MAAM,CAAC,uBAAU,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,KAAK,IAAI,cAAc,CAAC,CAAC;IAClE,CAAC;IA9CL;QAAC,iBAAU,EAAE;;oBAAA;IA+Cb,mBAAC;AAAD,CAAC,AA9CD,IA8CC;AA9CY,oBAAY,eA8CxB,CAAA","sourcesContent":["import { Component } from '@angular/core';\nimport { Injectable } from '@angular/core';\nimport { Http, Headers, RequestOptions } from '@angular/http';\nimport { HttpClient } from './../shared/http-client';\nimport { Observable } from 'rxjs/Observable';\nimport { Role } from './role';\nimport { Consts } from './../shared/consts';\nimport 'rxjs/Rx';\n \nlet entries = [],\n    baseURL: string = Consts.URL_PREFIX,\n    urlIdentifier: string = \"roles\",\n    rolesURL: string = baseURL + urlIdentifier + '?size=' + Consts.LISTSIZE,\n    roleURL: string = baseURL + urlIdentifier + '/';    \n \n@Injectable()\nexport class RolesService {\n   private httpClient : HttpClient;\n\n    constructor(httpClient: HttpClient) {\n        this.httpClient = httpClient;\n    }\n \n    findAll() {\n        return this.httpClient.get(rolesURL)\n            .map((res: any) => res.json())\n            .catch(this.handleError);\n    }\n\n    find(id: string) {\n        return this.httpClient.get(roleURL + id)\n            .map((res: any) => res.json())\n            .catch(this.handleError);            \n    }\n\n    persist(role: Role) {\n        return this.httpClient.put(roleURL + role.name, role)\n            .map((res: any) => res.json())\n            .catch(this.handleError);            \n    }\n\n    create(role: Role) {\n        return this.httpClient.post(roleURL, role)\n            .map((res: any) => res.json())\n            .catch(this.handleError);            \n    }\n\n    remove (role: Role) {\n         return this.httpClient.delete(roleURL + role.name, role)\n            .map((res: any) => res.json())\n            .catch(this.handlePlaceboError);                               \n    }\n \n\n    // Fediz IDP returns 204 for DELETE Requests..\n    handlePlaceboError(error) {      \n    }\n\n    handleError(error) {        \n        console.error(error);\n        return Observable.throw(error.json().error || 'Server error');\n    } \n}"]}