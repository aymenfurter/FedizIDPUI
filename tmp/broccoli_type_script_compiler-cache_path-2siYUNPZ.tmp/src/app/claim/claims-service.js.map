{"version":3,"file":"claims-service.js","sourceRoot":"","sources":["../../home/mika/workspace/fediz-idp-webui/angular2-fedizidpui-cli/fediz-idp-ui/tmp/broccoli_type_script_compiler-input_base_path-o2t0YTLc.tmp/0/src/app/claim/claims-service.ts"],"names":[],"mappings":";;;;;;;;;;AACA,qBAA2B,eAAe,CAAC,CAAA;AAE3C,4BAA2B,yBAAyB,CAAC,CAAA;AACrD,2BAA2B,iBAAiB,CAAC,CAAA;AAE7C,uBAAuB,oBAAoB,CAAC,CAAA;AAC5C,QAAO,SAAS,CAAC,CAAA;AAEjB,IAAI,OAAO,GAAG,EAAE,EACZ,OAAO,GAAW,eAAM,CAAC,UAAU,EACnC,aAAa,GAAW,QAAQ,EAChC,SAAS,GAAW,OAAO,GAAG,aAAa,GAAG,QAAQ,GAAG,eAAM,CAAC,QAAQ,EACxE,QAAQ,GAAW,OAAO,GAAG,aAAa,GAAG,GAAG,CAAC;AAGrD;IAGI,uBAAY,UAAsB;QAC9B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IACjC,CAAC;IAED,+BAAO,GAAP;QACI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC;aAChC,GAAG,CAAC,UAAC,GAAQ,IAAK,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC;aAC7B,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACjC,CAAC;IAED,4BAAI,GAAJ,UAAK,EAAU;QACX,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,GAAG,EAAE,CAAC;aACpC,GAAG,CAAC,UAAC,GAAQ,IAAK,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC;aAC7B,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACjC,CAAC;IAED,+BAAO,GAAP,UAAQ,KAAY;QAChB,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,GAAG,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC;aACxD,GAAG,CAAC,UAAC,GAAQ,IAAK,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC;aAC7B,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACjC,CAAC;IAED,8BAAM,GAAN,UAAO,KAAY;QACf,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC;aACvC,GAAG,CAAC,UAAC,GAAQ,IAAK,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC;aAC7B,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACjC,CAAC;IAED,8BAAM,GAAN,UAAQ,KAAY;QACf,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC;aAC5D,GAAG,CAAC,UAAC,GAAQ,IAAK,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC;aAC7B,KAAK,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;IACxC,CAAC;IAGD,8CAA8C;IAC9C,0CAAkB,GAAlB,UAAmB,KAAK;IACxB,CAAC;IAED,mCAAW,GAAX,UAAY,KAAK;QACb,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACrB,MAAM,CAAC,uBAAU,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,KAAK,IAAI,cAAc,CAAC,CAAC;IAClE,CAAC;IA9CL;QAAC,iBAAU,EAAE;;qBAAA;IA+Cb,oBAAC;AAAD,CAAC,AA9CD,IA8CC;AA9CY,qBAAa,gBA8CzB,CAAA","sourcesContent":["import { Component } from '@angular/core';\nimport { Injectable } from '@angular/core';\nimport { Http, Headers, RequestOptions } from '@angular/http';\nimport { HttpClient } from './../shared/http-client';\nimport { Observable } from 'rxjs/Observable';\nimport { Claim } from './claim';\nimport { Consts } from './../shared/consts';\nimport 'rxjs/Rx';\n \nlet entries = [],\n    baseURL: string = Consts.URL_PREFIX,\n    urlIdentifier: string = \"claims\",\n    claimsURL: string = baseURL + urlIdentifier + '?size=' + Consts.LISTSIZE,\n    claimURL: string = baseURL + urlIdentifier + '/';    \n \n@Injectable()\nexport class ClaimsService {\n   private httpClient : HttpClient;\n\n    constructor(httpClient: HttpClient) {\n        this.httpClient = httpClient;\n    }\n \n    findAll() {\n        return this.httpClient.get(claimsURL)\n            .map((res: any) => res.json())\n            .catch(this.handleError);\n    }\n\n    find(id: string) {\n        return this.httpClient.get(claimURL + id)\n            .map((res: any) => res.json())\n            .catch(this.handleError);            \n    }\n\n    persist(claim: Claim) {\n        return this.httpClient.put(claimURL + claim.claimType, claim)\n            .map((res: any) => res.json())\n            .catch(this.handleError);            \n    }\n\n    create(claim: Claim) {\n        return this.httpClient.post(claimURL, claim)\n            .map((res: any) => res.json())\n            .catch(this.handleError);            \n    }\n\n    remove (claim: Claim) {\n         return this.httpClient.delete(claimURL + claim.claimType, claim)\n            .map((res: any) => res.json())\n            .catch(this.handlePlaceboError);                               \n    }\n \n\n    // Fediz IDP returns 204 for DELETE Requests..\n    handlePlaceboError(error) {      \n    }\n\n    handleError(error) {        \n        console.error(error);\n        return Observable.throw(error.json().error || 'Server error');\n    } \n}"]}