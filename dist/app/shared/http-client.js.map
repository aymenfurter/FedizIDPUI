{"version":3,"file":"http-client.js","sourceRoot":"","sources":["../../home/mika/workspace/fediz-idp-webui/angular2-fedizidpui-cli/fediz-idp-ui/tmp/broccoli_type_script_compiler-input_base_path-G98MuYh6.tmp/0/src/app/shared/http-client.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAyB,eAAe,CAAC,CAAA;AACzC,qBAA4B,eAAe,CAAC,CAAA;AAG5C;IAIE,oBAAY,IAAU;QACpB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IAED,wCAAmB,GAAnB,UAAoB,QAAe,EAAE,QAAgB;QACnD,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,QAAQ,GAAE,GAAG,GAAG,QAAQ,CAAC,CAAA;IAC1D,CAAC;IAED,8CAAyB,GAAzB,UAA0B,OAAe;QACvC,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,QAAQ;YACtC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAC3B,OAAO,CAAC,MAAM,CAAC,QAAQ,EAAE,kBAAkB,CAAC,CAAC;IAC/C,CAAC;IAED,wBAAG,GAAH,UAAI,GAAG;QACL,IAAI,OAAO,GAAG,IAAI,cAAO,EAAE,CAAC;QAC5B,IAAI,CAAC,yBAAyB,CAAC,OAAO,CAAC,CAAC;QACxC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE;YACxB,OAAO,EAAE,OAAO;SACjB,CAAC,CAAC;IACL,CAAC;IAED,yBAAI,GAAJ,UAAK,GAAG,EAAE,IAAI;QACZ,IAAI,OAAO,GAAG,IAAI,cAAO,EAAE,CAAC;QAC5B,IAAI,CAAC,yBAAyB,CAAC,OAAO,CAAC,CAAC;QACxC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE;YAC/B,OAAO,EAAE,OAAO;SACjB,CAAC,CAAC;IACL,CAAC;IAGD,wBAAG,GAAH,UAAI,GAAG,EAAE,IAAI;QACX,IAAI,OAAO,GAAG,IAAI,cAAO,EAAE,CAAC;QAC5B,IAAI,CAAC,yBAAyB,CAAC,OAAO,CAAC,CAAC;QACxC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,EAAE;YAC9B,OAAO,EAAE,OAAO;SACjB,CAAC,CAAC;IACL,CAAC;IAED,2BAAM,GAAN,UAAO,GAAG,EAAE,IAAI;QACd,IAAI,OAAO,GAAG,IAAI,cAAO,EAAE,CAAC;QAC5B,IAAI,CAAC,yBAAyB,CAAC,OAAO,CAAC,CAAC;QACxC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,EAAE;YACjC,OAAO,EAAE,OAAO;SACjB,CAAC,CAAC;IACL,CAAC;IAlDH;QAAC,iBAAU,EAAE;;kBAAA;IAmDb,iBAAC;AAAD,CAAC,AAlDD,IAkDC;AAlDY,kBAAU,aAkDtB,CAAA","sourcesContent":["import {Injectable} from '@angular/core';\nimport {Http, Headers} from '@angular/http';\n\n@Injectable()\nexport class HttpClient {\n  private http;  \n  private userPasswordBase64;\n\n  constructor(http: Http) {\n    this.http = http;\n  }\n\n  setUsernamePassword(username:string, password: string) {\n    this.userPasswordBase64 = btoa(username +':' + password)\n  }\n\n  createAuthorizationHeader(headers:Headers) {\n    headers.append('Authorization', 'Basic ' +\n      this.userPasswordBase64); \n    headers.append('Accept', 'application/json');      \n  }\n\n  get(url) {\n    let headers = new Headers();\n    this.createAuthorizationHeader(headers);    \n    return this.http.get(url, {\n      headers: headers\n    });\n  }\n\n  post(url, data) {\n    let headers = new Headers();\n    this.createAuthorizationHeader(headers);\n    return this.http.post(url, data, {\n      headers: headers\n    });\n  }\n\n\n  put(url, data) {\n    let headers = new Headers();\n    this.createAuthorizationHeader(headers);\n    return this.http.put(url, data, {\n      headers: headers\n    });\n  }\n\n  delete(url, data) {\n    let headers = new Headers();\n    this.createAuthorizationHeader(headers);\n    return this.http.delete(url, data, {\n      headers: headers\n    });\n  }\n}"]}