{"version":3,"file":"applications-service.js","sourceRoot":"","sources":["../../home/mika/workspace/fediz-idp-webui/angular2-fedizidpui-cli/fediz-idp-ui/tmp/broccoli_type_script_compiler-input_base_path-G98MuYh6.tmp/0/src/app/application/applications-service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component } from '@angular/core';\nimport { Injectable } from '@angular/core';\nimport { Http, Headers, RequestOptions } from '@angular/http';\nimport { HttpClient } from './../shared/http-client';\nimport { Observable } from 'rxjs/Observable';\nimport { Application } from './application';\nimport { RequestClaim } from './../claim/requestclaim';\nimport { Consts } from './../shared/consts';\nimport 'rxjs/Rx';\n \nlet entries = [],\n    urlIdentifier: string = \"applications\",\n\n    baseURL: string = Consts.URL_PREFIX,    \n    listURL: string = baseURL + urlIdentifier + '?size=' + Consts.LISTSIZE,\n    entryURL: string = baseURL + urlIdentifier + '/',\n    claimMappingSuffix: string = \"/claims\";    \n \n@Injectable()\nexport class ApplicationsService {\n   private httpClient : HttpClient;\n\n    constructor(httpClient: HttpClient) {\n        this.httpClient = httpClient;\n    }\n \n    removeClaimMapping(entry: Application, claimType: string) {\n\n        let requestClaim: RequestClaim = new RequestClaim(claimType, true);\n\n        return this.httpClient.delete(entryURL + entry.realm + claimMappingSuffix + \"/\" + claimType, requestClaim)\n            .map((res: any) => res.json())\n            .catch(this.handlePlaceboError);            \n    }\n\n    addClaimMapping(entry: Application, claimType: string, isOptional: boolean) {\n        let requestClaim: RequestClaim = new RequestClaim(claimType, isOptional);\n        \n        return this.httpClient.post(entryURL + entry.realm + claimMappingSuffix, requestClaim)            \n            .map((res: any) => res.json())\n            .catch(this.handleError);            \n\n    }\n\n    findAll() {\n        return this.httpClient.get(listURL)\n            .map((res: any) => res.json())\n            .catch(this.handleError);\n    }\n\n    find(id: string) {\n        return this.httpClient.get(entryURL + id)\n            .map((res: any) => res.json())\n            .catch(this.handleError);            \n    }\n\n    persist(entry: Application) {\n        return this.httpClient.put(entryURL + entry.realm, entry)\n            .map((res: any) => res.json())\n            .catch(this.handleError);            \n    }\n \n    create(entry: Application) {\n        return this.httpClient.post(entryURL, entry)\n            .map((res: any) => res.json())\n            .catch(this.handleError);            \n    }\n\n    remove (entry: Application) {\n         return this.httpClient.delete(entryURL + entry.realm, entry)\n            .map((res: any) => res.json())\n            .catch(this.handlePlaceboError);                               \n    } \n\n    // Fediz IDP returns 204 for DELETE Requests..\n    handlePlaceboError(error) {      \n    }\n\n    handleError(error) {        \n        console.error(error);\n        return Observable.throw(error.json().error || 'Server error');\n    } \n}"]}