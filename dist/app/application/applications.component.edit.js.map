{"version":3,"file":"applications.component.edit.js","sourceRoot":"","sources":["../../home/mika/workspace/fediz-idp-webui/angular2-fedizidpui-cli/fediz-idp-ui/tmp/broccoli_type_script_compiler-input_base_path-G98MuYh6.tmp/0/src/app/application/applications.component.edit.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA0B,eAAe,CAAC,CAAA;AAE1C,4BAA+B,eAAe,CAAC,CAAA;AAC/C,uBAA6C,iBAAiB,CAAC,CAAA;AAC/D,qCAAoC,wBAAwB,CAAC,CAAA;AAO7D;IAMC,kCAAoB,KAAqB,EAAU,MAAc,EAAU,OAA4B;QAAnF,UAAK,GAAL,KAAK,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,YAAO,GAAP,OAAO,CAAqB;QALvG,UAAK,GAAG,IAAI,yBAAW,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,oDAAoD,EAAE,0EAA0E,EAAE,MAAM,EAAE,6BAA6B,EAAE,EAAE,CAAC,CAAC;QACrN,gBAAW,GAAG,KAAK,CAAC;QACpB,cAAS,GAAG,KAAK,CAAC;IAKlB,CAAC;IAEA,2CAAQ,GAAR;QAAA,iBAYE;QAXC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,UAAA,MAAM;YAC1C,IAAI,EAAE,GAAG,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;YAE1C,EAAE,CAAC,CAAC,EAAE,IAAI,WAAW,CAAC,CAAC,CAAC;gBACvB,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAC1B,UAAA,IAAI,IAAI,OAAA,KAAI,CAAC,KAAK,GAAG,IAAI,EAAjB,CAAiB,CAC5B,CAAC;YACH,CAAC;YAAC,IAAI,CAAC,CAAC;gBACP,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACzB,CAAC;QACJ,CAAC,CAAC,CAAC;IACN,CAAC;IAED,4CAAS,GAAT;QACC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YACvB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CACzC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC,CACnC,CAAC;QACH,CAAC;QAAC,IAAI,CAAC,CAAC;YACP,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAC5C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC,CACnC,CAAC;QACH,CAAC;IAEN,CAAC;IAEH,2CAAQ,GAAR,cAAa,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC;IACrC,sBAAI,gDAAU;aAAd,cAAmB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;;;OAAA;IA7CxD;QAAC,gBAAS,CAAC;YACR,QAAQ,EAAE,kBAAkB;YAC9B,WAAW,EAAE,2DAA2D;YACxE,SAAS,EAAE,CAAC,0CAAmB,CAAC;SAChC,CAAC;;gCAAA;IA0CF,+BAAC;AAAD,CAAC,AAzCD,IAyCC;AAzCY,gCAAwB,2BAyCpC,CAAA","sourcesContent":["import { Component } from '@angular/core';\nimport { NgForm }    from '@angular/common';\nimport { Application }    from './application';\nimport { Router, ActivatedRoute }       from '@angular/router';\nimport { ApplicationsService } from './applications-service';\n\n@Component({\n  \tselector: 'application-form',\n\ttemplateUrl: 'app/application/applications.component.template.edit.html',\n\tproviders: [ApplicationsService]\n})\nexport class ApplicationEditComponent {  \t\n\tmodel = new Application(\"\", \"\", \"\", \"\", \"http://docs.oasis-open.org/wsfed/federation/200706\", \"http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#SAMLV2.0\", \"3600\", \"https://localhost:?(\\d)*/.*\", []);\n\tcreateEntry = false;\n\tsubmitted = false; \t\n  \tprivate sub: any;\n\n\tconstructor(private route: ActivatedRoute, private router: Router, private service: ApplicationsService) {\n\n\t}\n\n \tngOnInit() {\n\t    this.sub = this.route.params.subscribe(params => {\n\t       let id = decodeURIComponent(params['id']);\n\n\t       if (id != \"undefined\") {\n\t\t       this.service.find(id).subscribe(\n\t            \tdata => this.model = data\n\t        \t);\n\t       \t} else {\n\t       \t\tthis.createEntry = true;\t       \t\t\n\t       \t}\n\t     });\n  \t}\n\n  \tonPersist() {  \t\t\n  \t\tthis.submitted = true;  \t\t\n  \t\n  \t\tif (!this.createEntry) {\n\t  \t\tthis.service.persist(this.model).subscribe(\n\t  \t\t\tthis.router.navigate(['/applications'])\n\t        );\n        } else {\n        \tthis.service.create(this.model).subscribe(\n\t  \t\t\tthis.router.navigate(['/applications'])\n\t        );\n        }\n\n  \t}\n\n\tonSubmit() { this.submitted = true; }  \n\tget diagnostic() { return JSON.stringify(this.model); }\n}"]}